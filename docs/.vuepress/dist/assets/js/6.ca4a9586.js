(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{351:function(t,s,a){t.exports=a.p+"assets/img/cap.f19f4f85.png"},364:function(t,s,a){"use strict";a.r(s);var n=a(42),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"브루트포스-개념"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#브루트포스-개념"}},[t._v("#")]),t._v(" [브루트포스] 개념")]),t._v(" "),n("h1",{attrs:{id:"브루트-포스란"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#브루트-포스란"}},[t._v("#")]),t._v(" 브루트 포스란?")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("암호학에서")]),t._v(" brute-force-attack(무차별 대입 공격)이란, 특정한 암호를 풀기 위해 가능한 모든 값을 대입하는 것을 의미한다. 충분한 시간이 존재한다면 암호화된 정보를 해독할 수 있지만 - 모든 경우의 수를 시도하므로 결국 암호를 풀게 된다 - 대부분의 경우 모든 계산을 마치려면 실용적이지 못한 비용이나 시간을 소요하게 된다.(출처 : 위키백과 "),n("a",{attrs:{href:"https://ko.wikipedia.org/wiki/%EB%AC%B4%EC%B0%A8%EB%B3%84_%EB%8C%80%EC%9E%85_%EA%B3%B5%EA%B2%A9",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://ko.wikipedia.org/wiki/무차별_대입_공격"),n("OutboundLink")],1),t._v(")")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("알고리즘으로서")]),t._v(" brute-force-search(완전 탐색)이란, 브루트 포스 어택처럼 모든 가능한 경우의 수를 검색하는 것이다. 예를 들어 0-9까지의 숫자를 써서 만든 비밀번호를 풀기 위해서, 모든 가능한 수를 조합해 본다. 0000,0001,0002,...9999까지 총 10^4개의 경우의 수가 도출된다.")]),t._v(" "),n("p",[t._v("만약 세일즈맨 알고리즘(traveling salesman problem)을 브루트 포스로 푼다고 하자. 이 세일즈맨은 한 지방의 10개의 도시를 한 번씩 방문해야 하는데, 최단 이동 거리를 갖는 경로를 찾는다.  완전 탐색으로 경로를 찾으려면 한 도시에서가능한 모든 경로를 탐색하고 가장 가까운 도시를 찾아 이동함으로써 결국 모든 경우의 수를 검색하게 된다. 이렇게 경우의 수를 다 찾기 때문에 반드시 정답을 찾게 되지만, 시간과 비용의 소요를 생각하면 비효율적이다. (출처 : "),n("a",{attrs:{href:"https://www.freecodecamp.org/news/brute-force-algorithms-explained/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.freecodecamp.org/news/brute-force-algorithms-explained/"),n("OutboundLink")],1),t._v(")")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("시간 복잡도")]),t._v(" 는 O(m*n)이 나온다.")])])]),t._v(" "),n("h1",{attrs:{id:"브루트-포스-string-matching"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#브루트-포스-string-matching"}},[t._v("#")]),t._v(" 브루트 포스 String-Matching")]),t._v(" "),n("p",[t._v("(1)")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://www.youtube.com/watch?v=vtnpzDPgaU0&t=336s",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.youtube.com/watch?v=vtnpzDPgaU0&t=336s"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("img",{attrs:{src:a(351),alt:"cap.png"}})]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\ntext : THIS IS A TEST\npattern : TEST\n*/")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" pattern"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" lengthOfText "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" lengthOfPattern "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lengthOfText "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" lengthOfPattern"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("lengthOfPattern"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" pattern"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("lengthOfPattern"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\t\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" lengthOfText"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//return -1;")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("(2)")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://www.youtube.com/watch?v=pllZNZxq1us",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.youtube.com/watch?v=pllZNZxq1us"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringMatch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("P")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("m"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("n")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n\tj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" m and "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("P")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n\tj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//j 한 칸 씩 옮겨가며 다음 문자 일치하는지 검사")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//패턴 길이만큼 일치하면 i반환")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 일치하지 않으면 -1 반환")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);